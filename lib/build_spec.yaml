artifacts:
  files:
    - imagedefinitions.json
    - imageDetail.json
version: "0.2"
phases:
  install:
    commands:
      - echo ${ACCOUNT_ID} ${REGION} ${REPO_NAME}
  pre_build:
    commands:
      - export TAG_NAME=$(date +%s)
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
  build:
    commands:
      - docker build -t ${REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}-${TAG_NAME} -f ./chatbot-app/Dockerfile ./chatbot-app/
      - docker tag ${REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}-${TAG_NAME} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}-${TAG_NAME}
  post_build:
    commands:
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}-${TAG_NAME}
      - printf '[{"name":"%s","imageUri":"%s"}]' ${REPO_NAME} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}-${TAG_NAME} > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}-${TAG_NAME} > imageDetail.json
      - cat imagedefinitions.json
      - cat imageDetail.json 
